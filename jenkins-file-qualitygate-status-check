import groovy.json.JsonSlurperClassic

node{
  stage('Checkout'){
    def repoURL = 'https://github.com/javahometech/my-app'
    git branch: 'master', url: repoURL
  }
  stage('Sonar Analysis'){
      def mvnHome = tool name: 'maven-3', type: 'maven'
      sh "${mvnHome}/bin/mvn sonar:sonar -Dsonar.host.url=http://35.154.40.90:9000 -Dsonar.login=ca15de880ff06e2aa4a2290de04cddb57ed2e118"
  }
  stage('Sonar QualityGate Status'){
    //   load report file generated by sonar under target/sonar/report-task.txt
    def sonarReport = readFile 'target/sonar/report-task.txt'
    def props = new Properties()
    def data = props.load(new StringReader(sonarReport))
    def ctaskURL = props.getProperty('ceTaskUrl')
    timeout(time: 1, unit: 'MINUTES') {
          waitUntil {
            sh "curl ${ctaskURL} -o response.json"
            status = getQualityGateStatus()
            return !"IN_PROGRESS".equals(status) && !"PENDING".equals(status)
          }
    }
  }
  stage('QualityGate Status Check'){
      status = getQualityGateStatus()
      if(! "SUCCESS".equals(status)){
          error "Qualitygates Failed"
      }
  }
}
def getQualityGateStatus(){
  def respDataFilr = readFile('response.json')
  def jsonSlurper = new JsonSlurperClassic()
  data = jsonSlurper.parseText(respDataFilr)
  return data['task']['status']
}
